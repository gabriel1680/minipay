buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.flywaydb:flyway-database-postgresql:10.11.0"
    }
}

plugins {
    id 'java-conventions'
    id 'jacoco-report-aggregation'
    id 'application'
    id 'org.springframework.boot' version '3.2.2'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'org.flywaydb.flyway' version '10.11.0'
}

group = 'com.minipay.infrastructure'

tasks.named("bootJar") {
    enabled = true
    archiveFileName = "application.jar"
    destinationDirectory = file("${rootProject.buildDir}/libs")
}

ext {
    cache2k = "2.6.1.Final"
    swagger = "1.6.8"
}

dependencies {
    // local
    implementation(project(":domain"))
    implementation(project(":application"))

    implementation("com.google.guava:guava:33.0.0-jre")
    implementation("com.fasterxml.jackson.module:jackson-module-afterburner")

    implementation("io.github.resilience4j:resilience4j-spring-boot3")
    implementation("io.github.resilience4j:resilience4j-bulkhead")
    implementation("io.github.resilience4j:resilience4j-circuitbreaker")
    implementation("io.github.resilience4j:resilience4j-retry")

    implementation("org.postgresql:postgresql")

    // cache
    implementation("org.cache2k:cache2k-api:$cache2k")
    implementation("org.cache2k:cache2k-spring:$cache2k")
    runtimeOnly("org.cache2k:cache2k-core:$cache2k")

    // docs
    implementation("org.springdoc:springdoc-openapi-webmvc-core:$swagger")
    implementation("org.springdoc:springdoc-openapi-ui:$swagger")

    // webserver - sub tomcat for undertow
    implementation("org.springframework.boot:spring-boot-starter-web") {
        exclude module: 'spring-boot-starter-tomcat'
    }
    implementation("org.springframework.boot:spring-boot-starter-undertow")

    implementation("org.springframework.boot:spring-boot-starter-aop")
    implementation("org.springframework.boot:spring-boot-starter-cache")
    implementation("org.springframework.boot:spring-boot-starter-data-jpa")

    // == tests ==
    // local
    testImplementation(project(path: ':domain', configuration: 'testClasses'))

    // spring
    testImplementation("org.springframework.boot:spring-boot-starter-test")
    testImplementation("org.springframework.boot:spring-boot-testcontainers")

    // flyway
    testImplementation('org.flywaydb:flyway-core')

    // test container
    testImplementation("org.testcontainers:testcontainers:1.18.3")
    testImplementation("org.testcontainers:junit-jupiter:1.18.3")

    testRuntimeOnly('com.h2database:h2')
}

dependencyManagement {
    imports {
        mavenBom "io.github.resilience4j:resilience4j-bom:2.2.0"
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:2023.0.0"
    }
}

flyway {
    url = System.getenv('FLYWAY_DB') ?: 'jdbc:postgresql://127.0.0.1:5432/minipay_db'
    user = System.getenv('FLYWAY_USER') ?: 'admin'
    password = System.getenv('FLYWAY_PASS') ?: '123'
}
